:host {
	&,
	& * {
		&,
		&::after,
		&::before {
			box-sizing: border-box;
		}
	}

	font-family: "Open Sans", arial, sans-serif;
	font-size: 12px; //calc(var(--buttonHeight, 55px) * 0.21);
	text-decoration-thickness: from-font;
	text-underline-offset: 0.2em;
}

button {
	display: block;
	background: transparent;
	color: inherit;
	border: 0;
}

.listen-live-container {
	display: inline-flex;

	position: relative;

	background-color: var(--backgroundColor, #e00);
	background-image: linear-gradient(
		-20deg,
		rgba(0, 0, 0, 0.1) 20%,
		rgba(0, 0, 0, 0) 40%,
		rgba(0, 0, 0, 0.2) 100%
	);
	color: var(--textColor, #fff);

	border: 1px outset rgba(255, 255, 255, 0.1);
	border-radius: 2px;
	box-shadow: -1px -1px 2px rgba(0, 0, 0, 0.1) inset;
}

.listen-live-button {
	display: flex;
	flex-direction: row;
	align-items: stretch;
	justify-content: space-between;

	width: 100%;
	min-width: 200px;
	max-width: 200px;

	height: 55px;

	padding: 5px;

	position: relative;
	overflow: hidden;

	cursor: pointer;

	line-height: 1.15;

	.play-icon-container {
		flex: 0 0 35px;
		width: 35px;
		display: flex;
		align-items: center;
		justify-content: center;
		align-self: center;
		justfy-self: center;

		line-height: 1;

		margin-right: 4px;

		position: relative;
		z-index: 2;

		.artwork {
			position: absolute;
			z-index: 1;
			width: 90%;
			left: 50%;
			top: 50%;
			transform: translate3d(-50%, -50%, 0);
			opacity: 0.8;
		}

		.play-icon {
			display: flex;
			align-items: center;
			justify-content: center;

			font-size: 2em;
			text-align: center;

			//background-color: var(--buttonBackgroundColor, #fff);
			//color: var(--buttonInnerColor, #000);

			//text-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
			filter: drop-shadow(0 0 10px rgba(0, 0, 0, 0.5));

			border-radius: 100%;

			width: 30px;
			height: 30px;

			position: absolute;
			z-index: 2;
		}

		.playing & {
			.artwork {
				opacity: 1;
			}
			.artwork + .play-icon {
				opacity: 0;
			}
		}
	}

	&:hover,
	&:focus-visible {
		.play-icon-container .play-icon {
			opacity: 1;
		}
	}
}

.label-area {
	flex: 1 0;
	overflow: hidden;
	display: flex;
	flex-direction: column;
	align-items: flex-start;
	justify-content: center;
	align-self: center;
	justify-self: flex-start;

	padding: 0;

	position: relative;
	z-index: 1;

	font-size: 1em;

	> * {
		width: 100%;
		//width: calc(100% - 5px);
	}

	.scroll {
		position: relative;
		mask-image: linear-gradient(
			to right,
			transparent 0%,
			black 4px,
			black calc(100% - 6px),
			transparent 100%
		);
	}
	.button-state-label {
		font-size: 1.69em;
		font-stretch: 87.5%;
		font-weight: 700;

		line-height: 1;

		padding: 0;
		margin: 0;

		transition: font-size 0.1s;
	}
	.stopped & .button-state-label {
		text-transform: uppercase;
	}
	.activity & .button-state-label {
		font-size: 1.55em;
	}
	.playing & .button-state-label {
		font-size: 1.4em;
		line-height: 1.1;
		text-transform: none;
	}
	.cue-label {
		font-size: 1em;
		line-height: 1.2;
		opacity: 0.95;

		.multi-station & {
			//max-width: 100%;
		}
		&.scroll {
			//max-width: 99%;
		}
	}
}

.dropdown-handle {
	flex: 0 0 40px;
	width: 40px;
	display: flex;
	align-items: center;
	justify-content: center;
	justify-self: flex-end;
	border-left: 2px groove rgba(255, 255, 255, 0.3);

	background-color: rgba(0, 0, 0, 0.2);

	position: relative;

	font-size: 1.65em;
	cursor: n-resize;

	> * {
		filter: drop-shadow(0 0 6px rgba(0, 0, 0, 0.5));
	}

	&.closed {
		cursor: s-resize;
	}

	&:hover,
	&:focus-visible {
		background-color: rgba(0, 0, 0, 0.3);
	}
}

.dropdown-container {
	display: flex;
	position: absolute;
	top: 100%;
	z-index: 2147483640;

	//width: 100vw;
	max-width: 100vw;

	> div {
		//width: 100%;
		display: flex;
	}

	.dropdown-inner {
		background-color: var(--backgroundColor, #e00);
		background-image: linear-gradient(
			-20deg,
			rgba(0, 0, 0, 0.2) 20%,
			rgba(0, 0, 0, 0.15) 40%,
			rgba(0, 0, 0, 0.3) 100%
		);
		color: var(--textColor, #fff);

		box-shadow: 5px 5px rgba(0, 0, 0, 0.15);

		border-radius: 3px;

		width: 300px;
		max-width: 100%;
		max-height: 0;
		overflow: hidden;

		transition: max-height 0.1s, visibility 0.1s;

		position: sticky;
		right: 0;
	}

	&.closed {
		visibility: hidden;
	}

	&.open {
		visibility: visible;

		.dropdown-inner {
			max-height: 100%;
		}
	}

	&.align-center {
		left: 50%;
		transform: translateX(-50%);
	}
	&.align-right {
		right: 0;
	}

	.station {
		display: flex;
		gap: 0.75em;
		width: 100%;
		padding: 1em;
		text-align: left;
		line-height: 1.2;

		cursor: pointer;

		border-bottom: 2px groove rgba(255, 255, 255, 0.4);

		&:last-child {
			border-bottom: 0;
		}

		&:hover,
		&:focus-visible {
			background-color: rgba(0, 0, 0, 0.1);

			h2 {
				text-decoration: underline;
			}
		}

		h1,
		h2,
		h3 {
			margin: 0;
			padding: 0;
		}

		h2 {
			font-size: 1.3em;
		}
		h3 {
			margin-top: 0.25em;
			font-size: 1.1em;
		}

		img {
			height: auto;
			max-width: 100%;
			max-height: 100%;
			object-fit: fill;
		}

		.logo {
			display: flex;
			justify-content: center;
			width: 20%;
			min-height: 2em;
			position: relative;

			opacity: 1;
			transition: opacity 0.2s;

			.overlay {
				display: block;
				opacity: 0;
				width: 1.5em;
				height: 1.5em;
				position: absolute;
				left: 50%;
				top: 50%;
				transform: translate(-50%, -50%);

				transition: opacity 0.15s;

				filter: drop-shadow(1px 1px 1px rgba(0, 0, 0, 0.6))
					drop-shadow(0 0 1em #000);
			}
		}

		&.playing,
		&:hover,
		&:focus-visible {
			.logo {
				img {
					opacity: 0.6;
				}
				.overlay {
					display: block;
					opacity: 1;
				}
			}
		}

		.is_playing {
			display: inline-block;
			background: rgba(0, 0, 0, 0.4);
			padding: 0.15em;
			font-style: normal;
			font-size: 0.9em;
		}

		.nowplaying {
			font-size: 0.9em;
			line-height: 1.3;
		}
	}
}

.scroll-label {
	max-width: 100%;
	overflow-x: hidden;
	display: flex;
	flex-direction: row;
	position: relative;

	span {
		display: flex;
		flex: 0 0 auto;
		flex-direction: row;
		//min-width: auto;
	}
}
.scroll {
	position: relative;
	span {
		@keyframes scroller {
			from {
				transform: translate3d(0%, 0, 0);
			}
			to {
				transform: translate3d(calc(-100% - 2ch), 0, 0);
			}
		}

		animation: var(--speed, 10s) infinite linear;
		animation-name: scroller;

		&::after {
			content: attr(data-label);
			padding: 0 0 0 2ch;
			position: absolute;
			left: 100%;
			white-space: nowrap;
		}
	}
}
