@import "@/common";

:host {
	all: unset;
	&,
	& * {
		&,
		&::after,
		&::before {
			box-sizing: border-box;
		}
	}

	--font_size: 13.25px;
	/*
	--highlight_color: var(--highlight_color, #000);
	--background_color: var(--background_color, #e00);
	--text_color: var(--text_color, #fff);
	*/
}

h1,
h2,
h3 {
	margin: 0;
	padding: 0;
}
h2 {
	font-size: 1.35em; //calc(var(--fontSize) * 1.3);
}
h3 {
	font-size: 1.2em; //calc(var(--fontSize) * 1.15);
}

img {
	height: auto;
	max-width: 100%;
	max-height: 100%;
	object-fit: scale-down;
}
svg {
	width: 100%;
	height: 100%;
	object-fit: scale-down;
}

button {
	all: unset;
	display: block;
	background: transparent;
	color: inherit;
	border: 0;
	text-align: left;
}

* {
	font-family: "Open sans", arial, sans-serif;

	&:focus-visible {
		outline: 2px solid blue;
	}
}

.listen-live-container {
	text-rendering: optimizeLegibility;
	font-size: var(--font_size, 12px);
	font-family: "Open sans", arial, sans-serif;
	text-align: left;
	text-decoration-thickness: 1px;
	text-decoration-thickness: from-font;
	text-underline-offset: 0.2em;

	display: inline-flex;

	background-color: var(--background_color);
	background-image: linear-gradient(
		-20deg,
		rgba(0, 0, 0, 0.1) 20%,
		transparent 40%,
		rgba(0, 0, 0, 0.2) 100%
	);
	background-image: linear-gradient(
		-20deg,
		color-mix(in srgb, var(--highlight_color) 10%, transparent) 20%,
		transparent 40%,
		color-mix(in srgb, var(--highlight_color) 20%, transparent) 100%
	);
	color: var(--text_color);

	border: 1px outset rgba(255, 255, 255, 0.1);
	border: 1px outset color-mix(in srgb, var(--text_color) 10%, transparent);
	border-radius: 3px;
	overflow: visible;

	user-select: none;

	opacity: 0.8;
	transition: opacity 0.5s;

	&.ready {
		opacity: 1;
		animation: none;
	}

	animation: 1s linear infinite suspense;
	@keyframes suspense {
		0% {
			opacity: 0.8;
		}
		50% {
			opacity: 0.7;
		}
		100% {
			opacity: 0.8;
		}
	}
}

.listen-live-button {
	display: flex;
	flex-direction: row;
	align-items: stretch;
	justify-content: space-between;

	width: 100%;
	min-width: 200px;
	max-width: 180px;

	height: 60px;
	max-height: 100%;

	padding: 5px;

	position: relative;
	overflow: hidden;

	cursor: wait;
	.ready.interactive & {
		cursor: pointer;
	}

	line-height: 1.2;

	&::before {
		content: "";
		display: block;
		width: 100%;
		height: 100%;
		position: absolute;
		z-index: 0;
		left: 0;
		top: 0;
		background-color: var(--highlight_color);
		opacity: 0;
		transition: opacity 0.2s;
	}

	@include hover {
		&::before {
			opacity: 0.2;
		}
	}

	/*
	& > .artwork {
		position: absolute;
		top: 50%;
		left: 5px;
		transform: translateY(-50%);
		width: auto;
		height: 85%;
		z-index: 2;
		border-right: 1px solid rgba(0, 0, 0, 0.3);
		opacity: 1;

		transition: all 0.25s;

		+ .play-icon-container {
			flex-basis: calc(var(--button_height) - 10px);
			width: calc(var(--button_height) - 10px);
			height: calc(var(--button_height) - 10px);

			&::after {
				--toSize: 300%;
			}

			svg {
				opacity: 0;
				transition: opacity 0.25s;
			}
		}
	}
	@include hover {
		& > .artwork {
			opacity: 0.6;
		}
		& > .play-icon-container {
			z-index: 2;
			svg {
				opacity: 1;
			}
		}
	}
	*/
}

.live-artwork {
	position: absolute;
	top: 50%;
	left: 4px;
	transform: translateY(-50%);
	width: auto;
	height: calc(var(--button_height) - 10px);
	z-index: 2;
	opacity: 1;

	border-radius: 3px;
	box-shadow: 0 0 3px rgba(0, 0, 0, 0.5);

	transition: all 0.25s;
	transform-origin: center center;

	~ .play-icon-container {
		flex-basis: calc(var(--button_height) - 10px);
		width: calc(var(--button_height) - 10px);
		height: calc(var(--button_height) - 10px);

		&::after {
			--toSize: 350%;
		}
	}

	@at-root .listen-live-button {
		@include hover {
			.live-artwork {
				top: 110%;
				box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
				//z-index: 1;

				~ .play-icon-container {
					//z-index: 2;

					&::after {
						--toSize: 220%;
					}
				}
			}
		}
	}
}

.play-icon-container {
	flex: 0 0 40px;
	width: 40px;
	height: 40px;
	display: flex;
	align-items: center;
	justify-content: center;
	align-self: center;
	justify-self: center;
	transition: all 0.1s;

	padding: 5px;
	margin-right: 5px;

	position: relative;
	z-index: 1;

	.playing &::before {
		--waveLeft: 0%;
		--waveTop: 10%;
		--fromOpacity: 0;
		--toOpacity: 0.7;
		--toSize: 780%;
		--waveSpeed: 4s;
		@extend .extendWave;
		z-index: -1;
	}

	.play-icon {
		display: flex;
		align-items: center;
		justify-content: center;
		//border-radius: 50%;
		width: 30px;
		height: 30px;
		position: relative;
		z-index: 3;
		filter: drop-shadow(0 0 10px #0008);

		svg {
			filter: drop-shadow(1px 1px 0 #0003);
		}

		.playing &,
		.activity & {
			//width: 34px;
			//height: 34px;
		}

		.activity &::before {
			content: "";
			display: block;
			width: 120%;
			height: 120%;

			position: absolute;
			left: -10%;
			top: -10%;
			//transform: translate(-50%, -50%);

			border-top: 3px solid var(--text_color);
			border-right: 2px solid transparent;
			border-left: 2px dotted var(--text_color);
			border-radius: 50%;

			opacity: 0.5;

			animation: 1.8s linear infinite rotatePlay;

			will-change: transform, opacity;

			@keyframes rotatePlay {
				0% {
					transform: rotate(0deg);
				}
				50% {
					transform: rotate(180deg);
					opacity: 0.7;
				}
				100% {
					transform: rotate(360deg);
				}
			}
		}
	}

	.playing & {
		//&::before,
		&::after {
			--waveDelay: 0.3s;
			--waveSpeed: 1.7s;
			--toSize: 220%;
			@extend .extendWave;
			z-index: -1;
		}
		/*
		&::before {
			--waveDelay: 1s;
			--waveSpeed: 1.5s;
			--toSize: 230%;
		}
		*/
	}
}

.label-area {
	flex: 1 0;
	overflow: hidden;
	display: flex;
	flex-direction: column;
	align-items: flex-start;
	justify-content: center;
	align-self: center;
	justify-self: flex-start;

	position: relative;
	z-index: 3;

	line-height: 1.15;
	text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.1);

	.scroll {
		mask-image: linear-gradient(
			to right,
			transparent 0%,
			black 3px,
			black calc(100% - 6px),
			transparent 100%
		);
	}

	.playing-label {
		font-size: 8.5px;
		letter-spacing: 0.055em;
		line-height: 1;
		text-transform: uppercase;
		margin-bottom: 1px;
		opacity: 0.85;
	}

	.state {
		font-size: 1.95em; //calc(var(--fontSize) * 1.69);
		font-stretch: 87.5%;
		font-weight: 700;
		text-shadow: 1px 1px 0 rgba(0, 0, 0, 0.3);

		.stopped & {
			line-height: 1;
			text-transform: uppercase;
		}
		.activity & {
			font-size: 1.55em; //calc(var(--fontSize) * 1.55);
		}
		.playing & {
			font-size: 1.4em; //calc(var(--fontSize) * 1.4);
		}
	}

	.cue {
		font-stretch: 87.5%;
		opacity: 0.98;
		line-height: 1.15;
	}
}

.dropdown-handle {
	flex: 0 0 45px;
	width: 45px;
	display: flex;
	align-items: center;
	justify-content: center;
	justify-self: flex-end;

	padding: 8px;

	border-left: 2px groove rgba(255, 255, 255, 0.3);
	border-left: 2px groove
		color-mix(in srgb, var(--text_color) 30%, transparent);

	position: relative;
	z-index: 2;
	overflow: hidden;

	svg {
		opacity: 0.85;
		max-width: 20px;
	}

	cursor: wait;
	.ready.interactive & {
		cursor: s-resize;
		&.open {
			cursor: n-resize;
		}
	}

	&:before {
		content: "";
		display: block;
		width: 100%;
		height: 100%;
		position: absolute;
		left: 0;
		top: 0;
		z-index: -1;
		background-color: var(--highlight_color);
		opacity: 0.15;
		transition: opacity 0.2s;
	}

	@include hover {
		svg {
			opacity: 1;
		}
		&::before {
			opacity: 0.3;
		}
	}
}

.dropdown-container {
	display: flex;
	position: absolute;
	top: calc(var(--button_top) + var(--button_height) - 2px);
	left: var(--button_left);
	z-index: 2147483640;

	max-width: 100vw;

	border-radius: 0 3px 3px 3px;

	overflow: hidden;

	> div {
		display: flex;
	}

	&.align-center {
		left: 50%;
		transform: translateX(-50%);
		border-radius: 3px;
	}
	&.align-right {
		left: calc(var(--button_left) + var(--button_width));
		transform: translateX(-100%);
		border-radius: 3px 0 3px 3px;
	}
}

.dropdown-inner {
	background-color: var(--background_color);
	background-image: linear-gradient(
		10deg,
		rgba(0, 0, 0, 0.2) 20%,
		rgba(0, 0, 0, 0.15) 40%,
		rgba(0, 0, 0, 0.3) 100%
	);
	background-image: linear-gradient(
		10deg,
		color-mix(in srgb, var(--highlight_color) 20%, transparent) 20%,
		color-mix(in srgb, var(--highlight_color) 15%, transparent) 40%,
		color-mix(in srgb, var(--highlight_color) 30%, transparent) 100%
	);

	box-shadow: 5px 5px rgba(0, 0, 0, 0.15);
	width: 350px;
	max-width: 100%;
	max-height: 0;
	overflow: hidden;

	transition: max-height 0.1s, visibility 0.1s;

	position: sticky;
	right: 0;

	.open & {
		max-height: 100%;
	}
}

.dropdown-station {
	display: flex;
	flex-direction: row;
	align-items: center;
	&.has-cue {
		align-items: flex-start;
	}

	gap: 0.75em; //calc(var(--fontSize) * 0.75);
	line-height: 1.25;
	position: relative;
	width: 100%;
	padding: 1.5em; //calc(var(--fontSize) * 1.5);

	border-bottom: 2px groove rgba(255, 255, 255, 0.4);
	border-bottom: 2px groove
		color-mix(in srgb, var(--text_color) 40%, transparent);
	&:last-child {
		border-bottom: 0;
	}

	cursor: wait;
	.interactive & {
		cursor: pointer;
	}

	&::before {
		content: "";
		display: block;
		width: 100%;
		height: 100%;
		position: absolute;
		z-index: -1;
		left: 0;
		top: 0;
		background-color: var(--highlight_color);
		opacity: 0;
		transition: opacity 0.15s;
	}

	@include hover {
		&::before {
			opacity: 0.2;
		}

		h2 {
			text-decoration: underline;
		}
	}
	&:focus-visible {
		h2 {
			text-decoration: underline;
		}
	}

	.logo {
		display: flex;
		flex-basis: 20%;
		min-height: 2.5em; //calc(var(--fontSize) * 2.5);
		width: 20%;
		height: fit-content;
		position: relative;
		top: 0.1em; //calc(var(--fontSize) * 0.1);
		opacity: 1;
		transition: opacity 0.2s;

		.overlay {
			display: block;
			width: 2.5em; //calc(var(--fontSize) * 2.5);
			height: 2.5em; //calc(var(--fontSize) * 2.5);
			position: absolute;
			left: 50%;
			top: 50%;
			transform: translate(-50%, -50%);
			opacity: 0;
			filter: drop-shadow(0 0 1px rgba(0, 0, 0, 0.3))
				drop-shadow(2px 2px 1px rgba(0, 0, 0, 0.3))
				drop-shadow(0 0 1em #000);
			transition: opacity 0.15s;
		}
	}

	&.playing,
	&:focus-visible {
		.logo {
			img {
				opacity: 0.6;
			}
			.overlay {
				opacity: 1;
			}
		}
	}
	@include hover {
		.logo {
			img {
				opacity: 0.6;
			}
			.overlay {
				opacity: 1;
			}
		}
	}

	.info {
		flex-basis: 80%;
	}

	.status {
		display: block;
		width: fit-content;
		background-color: rgba(0, 0, 0, 0.6);
		background-color: color-mix(
			in srgb,
			var(--highlight_color) 50%,
			transparent
		);
		padding: 0.4em; //calc(var(--fontSize) * 0.4);
		font-style: normal;
		font-size: 9px;
		letter-spacing: 0.03em;
		line-height: 0.9;
		text-transform: uppercase;
		margin-top: -0.65em;
		margin-bottom: 3px;
		opacity: 0.95;

		&:before {
			content: "⦿ ";
			display: inline;
			color: red;
			font-size: 11px;
			font-weight: bold;
			line-height: 0;
		}
	}

	.nowplaying {
		display: flex;
		gap: 0.75em;
		margin-top: 0.5em;
		font-size: 0.9em; //calc(var(--fontSize) * 0.9);
		line-height: 1.3;

		.artwork {
			border-radius: 3px;
			max-height: 3em; //calc(var(--fontSize) * 3);
		}
	}
}

.scroll-label {
	display: flex;
	flex-direction: row;
	max-width: 100%;
	position: relative;
	overflow: hidden;

	span {
		display: flex;
		flex: 0 0 auto;
		flex-direction: row;
		transform: translate3d(0, 0, 0);
		will-change: transform;
	}

	&.scroll span {
		animation: var(--speed, 10s) infinite linear scrollLabel;
		--distance: calc(-100% - 1.5em);

		&::after {
			content: attr(data-label);
			padding-left: 1.5em;
			position: absolute;
			left: 100%;
			white-space: nowrap;
		}

		@keyframes scrollLabel {
			from {
				transform: translate3d(0, 0, 0);
			}
			to {
				transform: translate3d(var(--distance), 0, 0);
			}
		}
	}
}

.extendWave {
	content: "";
	background-image: linear-gradient(
		80deg,
		transparent 0%,
		var(--background_color) 100%
	);
	width: var(--toSize);
	height: var(--toSize);
	border-radius: 100%;
	position: absolute;
	z-index: -1;
	left: var(--waveLeft, 45%);
	top: var(--waveTop, 50%);
	filter: drop-shadow(0 0 10px rgba(0, 0, 0, 0.5));
	transform: translate3d(-50%, -50%, 0);

	animation: var(--waveSpeed, 1s) linear var(--waveDela, 0s) infinite
		extendWave;

	will-change: scale, opacity;

	@keyframes extendWave {
		0% {
			transform: translate3d(-50%, -50%, 0) scale(0);
			//width: 0;
			//height: 0;
			opacity: var(--fromOpacity, 0);
		}
		50% {
			opacity: var(--toOpacity, 0.5);
		}
		100% {
			transform: translate3d(-50%, -50%, 0) scale(1);
			//width: var(--toSize, 200%);
			//height: var(--toSize, 200%);
			opacity: var(--endOpacity, 0);
		}
	}
}
